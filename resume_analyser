%pip install pdfplumber pytesseract pdf2image google.generativeai python-dotenv

import pdfplumber
import pytesseract
from pdf2image import convert_from_path
import google.generativeai as genai
import os
from dotenv import load_dotenv

def extract_text_from_pdf(pdf_path):
    text = ""
    try:
        # Try direct text extraction
        with pdfplumber.open(pdf_path) as pdf:
            for page in pdf.pages:
                page_text = page.extract_text()
                if page_text:
                    text += page_text

        if text.strip():
            return text.strip()
    except Exception as e:
        print(f"Direct text extraction failed: {e}")

    # Fallback to OCR for image-based PDFs
    print("Falling back to OCR for image-based PDF.")
    try:
        images = convert_from_path(pdf_path)
        for image in images:
            page_text = pytesseract.image_to_string(image)
            text += page_text + "\n"
    except Exception as e:
        print(f"OCR failed: {e}")

    return text.strip()

load_dotenv()
genai.configure(api_key=os.getenv("AIzaSyBCMBf0VF1C7WS2tPO6FyKX_R7qcpJXgDs"))
model = genai.GenerativeModel("gemini-1.5-flash")

def analyze_resume(resume_text, job_description=None):
    if not resume_text:
        return {"error": "Resume text is required for analysis."}
   
    base_prompt = f"""
    You are an experienced HR with Technical Experience in the field of Data Science, Data Analysis, DevOps, Machine Learning, AI, Full Stack Development, Big Data Engineering, Marketing Analysis, HR, or Software Development.
   
    Your task is to review the provided resume and provide an evaluation on:
    1. Strengths and weaknesses.
    2. Missing key skills required for the role.
    3. Suggested certifications or courses with source links.
    4. Alternative career paths based on resume strengths.
    5. ATS compatibility check for better job application success.
    6. A job match percentage if a job description is provided.
    7.ats score in the format x/100
    8.job description match score x/100
    9.resume score x/100
    10.mock interview questions according to given job description
    Resume:
    {resume_text}
    """

    if job_description:
        base_prompt += f"""
       
        Additionally, compare this resume to the following job description:
       
        Job Description:
        {job_description}
       
        Provide a job match percentage based on the required skills, experience, and qualifications.
        """

    response = model.generate_content(base_prompt)
    analysis = response.text.strip()
    return analysis

pdf_path = "Resume.pdf"
resume_text = extract_text_from_pdf(pdf_path)
job_description = "Enter Job Description Here"

print("\nExtracted Text from PDF:")
print(resume_text)
print("\nResume Analysis:")
print(analyze_resume(resume_text, job_description))
